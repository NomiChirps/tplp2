common --verbose_failures

# Enable new-style C++ toolchain resolution and set the target platform
common --incompatible_enable_cc_toolchain_resolution
common --platforms=@rules_pico//platforms:pico
# Target platform when running tools is the unnamed, local platform.
run --platforms=

# For a debug build, optimize everything except code in this workspace.
# We can't build with just "-c dbg" because there's not enough flash on the board to store ALL the debug symbols.
# Select this with "--config=debug".
common:debug -c opt --per_file_copt=//.*\.cc@-O1,-g
common:debug --@rules_pico//pico/config:stdio_usb=False

# For regular old development without a debugger.
# Still "-c opt" to keep the image size to a reasonable level.
common:iterate -c opt
common:iterate --copt="-DPICOLOG_RESET_TO_BOOTLOADER_ON_FATAL=1"

# Thanks Adafruit I love you <3
#common --@rules_pico//pico/config:board=adafruit_feather_rp2040
# Using a basic Pico for now, until the debug headers come in for the Feather
common --@rules_pico//pico/config:board=pico

# TODO: we might want to disable stdio_usb later; it uses an interrupt every 1ms
common --@rules_pico//pico/config:stdio_uart=False
common --@rules_pico//pico/config:stdio_usb=True
# We don't need no steenking floating point
common --@rules_pico//pico/config:float_impl=@pico-sdk//:pico_float_none
common --@rules_pico//pico/config:double_impl=@pico-sdk//:pico_double_none

common --@rules_pico//pico/config:rtos_adapter_enable=True
common --@rules_pico//pico/config:rtos_adapter_header=@FreeRTOS//:freertos_sdk_config
common --@rules_pico//pico/config:rtos_adapter_header_name=FreeRTOS/freertos_sdk_config.h

# FIXME: we really don't need this. just have the rules refer to tplp directly.
common --@FreeRTOS//:FreeRTOSConfig=//tplp:FreeRTOSConfig
common --@lvgl//:lv_conf=//tplp:lv_conf

## Configuration of various libraries
# TODO: can we put these defines in a header somewhere?
# Wait for someone to monitor serial output
common --copt="-DPICO_STDIO_USB_CONNECT_WAIT_TIMEOUT_MS=5000"
common --copt="-DPICO_STDIO_USB_POST_CONNECT_WAIT_DELAY_MS=200"

# We don't use pico-sdk sleep functions, and would like to
# disable the default alarm pool they use. But @rules_pico
# explicitly enables it. Why?
# See https://github.com/raspberrypi/pico-sdk/issues/873
#common --copt="-DPICO_TIME_DEFAULT_ALARM_POOL_DISABLED=1"

# Disable CR/LF conversion on stdout. This is useless overhead.
common --copt="-DPICO_STDIO_ENABLE_CRLF_SUPPORT=0"

# Flags needed for //picolog:backtrace
common:debug --copt="-mpoke-function-name"
common:iterate --copt="-mpoke-function-name"
# Not clear if we also need the following. Are they implied? Already set?
# Backtrace seems to work fine without them for now.
#     -fno-omit-frame-pointer -funwind-tables
