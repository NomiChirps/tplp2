build --verbose_failures

# Enable new-style C++ toolchain resolution and set the target platform
build --incompatible_enable_cc_toolchain_resolution
build --platforms=@rules_pico//platforms:pico
run --platforms=

# Thanks Adafruit I love you <3
build --@rules_pico//pico/config:board=adafruit_feather_rp2040
# TODO: we might want to disable stdio_usb later; it uses an interrupt every 1ms
build --@rules_pico//pico/config:stdio_uart=False
build --@rules_pico//pico/config:stdio_usb=True
# We don't need no steenking floating point
build --@rules_pico//pico/config:float_impl=@pico-sdk//:pico_float_none
build --@rules_pico//pico/config:double_impl=@pico-sdk//:pico_double_none

build --@rules_pico//pico/config:rtos_adapter_enable=True
build --@rules_pico//pico/config:rtos_adapter_header=@FreeRTOS-Kernel//:freertos_sdk_config
build --@rules_pico//pico/config:rtos_adapter_header_name=FreeRTOS/freertos_sdk_config.h

build --@FreeRTOS-Kernel//:FreeRTOSConfig=//tplp:FreeRTOSConfig
build --@lvgl//:lv_conf=//tplp:lv_conf

# quality of life
build --copt="-Werror=format"

## Configuration of various libraries
# TODO: can we put these defines in a header somewhere?
# Prevent that weird "Reset" device showing up over USB
build --copt="-DPICO_STDIO_USB_ENABLE_RESET_VIA_VENDOR_INTERFACE=0"
# Wait for someone to monitor serial output
build --copt="-DPICO_STDIO_USB_CONNECT_WAIT_TIMEOUT_MS=5000"
build --copt="-DPICO_STDIO_USB_POST_CONNECT_WAIT_DELAY_MS=200"
# 0x800 is the default value, but specify it explicitly.
build --copt="-DPICO_CORE1_STACK_SIZE=0x800"
# Undocumented option which write-protects the last 32 bytes of the stack(s)
build --copt="-DPICO_USE_STACK_GUARDS=1"

# We don't use pico-sdk sleep functions, and would like to
# disable the default alarm pool they use. Unfortunately
# @rules_pico explicitly enables it. Why?
# See https://github.com/raspberrypi/pico-sdk/issues/873
#build --copt="-DPICO_TIME_DEFAULT_ALARM_POOL_DISABLED=1"
