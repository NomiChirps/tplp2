load("@FreeRTOS//:defs.bzl", "PORT_PATHS")

package(default_visibility = ["@FreeRTOS//:__subpackages__"])

cc_library(
    name = "FreeRTOS",
    deps = [
        ":FreeRTOS-Kernel",
        ":heap_4",
    ] + select({
        "@FreeRTOS//config/ports:GCC_RP2040": ["@FreeRTOS//ports/GCC_RP2040:port_impl"],
    }),
)

KERNEL_HDRS = [
    "include/FreeRTOS.h",
    "include/StackMacros.h",
    "include/atomic.h",
    "include/croutine.h",
    "include/deprecated_definitions.h",
    "include/event_groups.h",
    "include/list.h",
    "include/message_buffer.h",
    "include/mpu_prototypes.h",
    "include/mpu_wrappers.h",
    "include/portable.h",
    "include/projdefs.h",
    "include/queue.h",
    "include/semphr.h",
    "include/stack_macros.h",
    "include/stream_buffer.h",
    "include/task.h",
    "include/timers.h",
    # Copied by genrule to allow these other headers to bare-include it, without polluting the search path for dependents
    "include/portmacro.h",
]

cc_library(
    name = "FreeRTOS-Kernel",
    srcs = [
        "croutine.c",
        "event_groups.c",
        "list.c",
        "queue.c",
        "stream_buffer.c",
        "tasks.c",
        "timers.c",
    ],
    hdrs = KERNEL_HDRS,
    implementation_deps = [
        ":FreeRTOS-Kernel-headers-bareinclude",
    ],
    include_prefix = "FreeRTOS",
    strip_include_prefix = "include",
    deps = [
        "@FreeRTOS//config:FreeRTOSConfig",
        # Provide portmacro as a prefixed include to dependents
    ] + select({
        "@FreeRTOS//config/ports:GCC_RP2040": ["@FreeRTOS//ports/GCC_RP2040:portmacro"],
    }),
)

cc_library(
    name = "FreeRTOS-Kernel-headers-bareinclude",
    hdrs = KERNEL_HDRS,
    strip_include_prefix = "include",
)

genrule(
    name = "copy_portmacro_for_bareinclude",
    srcs = select({
        "@FreeRTOS//config/ports:GCC_RP2040": ["portable/ThirdParty/GCC/RP2040/include/portmacro.h"],
    }),
    outs = [
        "include/portmacro.h",
    ],
    cmd_bash = "cp $< $@",
)

# heap_1 does not permit deletion
# heap_2 permits deletion but does not coalesce
# heap_3 wraps malloc/free (avoid)
# heap_4 coalesces
cc_library(
    name = "heap_4",
    srcs = ["portable/MemMang/heap_4.c"],
    implementation_deps = [
        ":FreeRTOS-Kernel-headers-bareinclude",
    ],
    deps = [
        ":FreeRTOS-Kernel",
    ],
)

[filegroup(
    name = name + "_all_srcs",
    srcs = glob([path + "/**"]),
) for name, path in PORT_PATHS.items()]
