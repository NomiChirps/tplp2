# Hardcoded to use the RP2040 port.
#
# Required flags in .bazelrc:
#     build --@rules_pico//pico/config:rtos_adapter_enable=True
#     build --@rules_pico//pico/config:rtos_adapter_header=@FreeRTOS//:freertos_sdk_config
#     build --@rules_pico//pico/config:rtos_adapter_header_name=FreeRTOS/freertos_sdk_config.h
# Alternatively, use pico_build_with_config() to supply these parameters to your binary instead.
# TODO: write a little .c file with a #error in it to test that these flags are set

package(default_visibility = ["@FreeRTOS//:__subpackages__"])

cc_library(
    name = "FreeRTOS",
    deps = [
        ":FreeRTOS-Kernel",
        ":heap_4",
        ":port_impl",
    ],
)

KERNEL_HDRS = [
    "include/FreeRTOS.h",
    "include/StackMacros.h",
    "include/atomic.h",
    "include/croutine.h",
    "include/deprecated_definitions.h",
    "include/event_groups.h",
    "include/list.h",
    "include/message_buffer.h",
    "include/mpu_prototypes.h",
    "include/mpu_wrappers.h",
    "include/portable.h",
    "include/projdefs.h",
    "include/queue.h",
    "include/semphr.h",
    "include/stack_macros.h",
    "include/stream_buffer.h",
    "include/task.h",
    "include/timers.h",
    # Copied by genrule to allow these other headers to bare-include it, without polluting the search path for dependents
    "include/portmacro.h",
]

cc_library(
    name = "FreeRTOS-Kernel",
    srcs = [
        "croutine.c",
        "event_groups.c",
        "list.c",
        "queue.c",
        "stream_buffer.c",
        "tasks.c",
        "timers.c",
    ],
    hdrs = KERNEL_HDRS,
    implementation_deps = [
        ":FreeRTOS-Kernel-headers-bareinclude",
    ],
    include_prefix = "FreeRTOS",
    strip_include_prefix = "include",
    deps = [
        "@FreeRTOS//config:FreeRTOSConfig",
        # Provide portmacro as a prefixed include to dependents
        ":portmacro",
    ],
)

cc_library(
    name = "FreeRTOS-Kernel-headers-bareinclude",
    hdrs = KERNEL_HDRS,
    strip_include_prefix = "include",
)

genrule(
    name = "copy_portmacro_for_bareinclude",
    srcs = [
        "portable/ThirdParty/GCC/RP2040/include/portmacro.h",
    ],
    outs = [
        "include/portmacro.h",
    ],
    cmd_bash = "cp $< $@",
)

# heap_1 does not permit deletion
# heap_2 permits deletion but does not coalesce
# heap_3 wraps malloc/free (avoid)
# heap_4 coalesces
cc_library(
    name = "heap_4",
    srcs = ["portable/MemMang/heap_4.c"],
    implementation_deps = [
        ":FreeRTOS-Kernel-headers-bareinclude",
    ],
    deps = [
        ":FreeRTOS-Kernel",
    ],
)

cc_library(
    name = "freertos_sdk_config",
    hdrs = ["portable/ThirdParty/GCC/RP2040/include/freertos_sdk_config.h"],
    include_prefix = "FreeRTOS",
    strip_include_prefix = "portable/ThirdParty/GCC/RP2040/include",
    deps = [
        ":rp2040_config_bareinclude",
        "@FreeRTOS//config:FreeRTOSConfig",
    ],
)

cc_library(
    name = "port_impl",
    srcs = [
        "portable/ThirdParty/GCC/RP2040/idle_task_static_memory.c",
        "portable/ThirdParty/GCC/RP2040/port.c",
    ],
    implementation_deps = [
        ":FreeRTOS-Kernel-headers-bareinclude",
    ],
    deps = [
        ":FreeRTOS-Kernel",
        "@rules_pico//pico:hardware_clocks",
        "@rules_pico//pico:hardware_exception",
        "@rules_pico//pico:hardware_irq",
        "@rules_pico//pico:pico_multicore",
        "@rules_pico//pico:pico_stdlib",
        "@rules_pico//pico:pico_sync",
    ],
    # Needed for when @rules_pico depends on :freertos_sdk_config.
    alwayslink = 1,
)

cc_library(
    name = "portmacro",
    hdrs = [
        "portable/ThirdParty/GCC/RP2040/include/portmacro.h",
    ],
    include_prefix = "FreeRTOS",
    strip_include_prefix = "portable/ThirdParty/GCC/RP2040/include",
    deps = [
        # This dependency could be narrower, but rules_pico doesn't expose anything smaller at the time of writing. It's not that important anyway.
        "@rules_pico//pico:pico_stdlib",
    ],
)

cc_library(
    # Should be included at the end of user FreeRTOSConfig.h
    name = "rp2040_config",
    hdrs = ["portable/ThirdParty/GCC/RP2040/include/rp2040_config.h"],
    include_prefix = "FreeRTOS",
    strip_include_prefix = "portable/ThirdParty/GCC/RP2040/include",
)

cc_library(
    name = "rp2040_config_bareinclude",
    hdrs = ["portable/ThirdParty/GCC/RP2040/include/rp2040_config.h"],
    strip_include_prefix = "portable/ThirdParty/GCC/RP2040/include",
)
