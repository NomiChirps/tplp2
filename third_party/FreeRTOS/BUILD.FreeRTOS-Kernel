#
# BUILD files for ports should declare:
#   :portmacro
#       cc_library providing "FreeRTOS/portmacro.h" header, with that prefix
#   :port_impl
#       cc_library for the port implementation.
#
# Port implementations probably want:
#    implementation_deps = ["@FreeRTOS-Kernel//:FreeRTOS-Kernel-headers-bareinclude", ...]
#    deps = ["@FreeRTOS-Kernel", ...]
#    target_compatible_with = [...]
#

load("@FreeRTOS//:defs.bzl", "PORT_NAMES")

package(default_visibility = ["@FreeRTOS//:__subpackages__"])

cc_library(
    name = "FreeRTOS",
    deps = [
        ":FreeRTOS-Kernel",
    ] + select({
        "@FreeRTOS//config/ports:" + name: ["@FreeRTOS//ports/" + name + ":port_impl"]
        for name in PORT_NAMES
    }),
)

KERNEL_HDRS = [
    "include/FreeRTOS.h",
    "include/StackMacros.h",
    "include/atomic.h",
    "include/croutine.h",
    "include/deprecated_definitions.h",
    "include/event_groups.h",
    "include/list.h",
    "include/message_buffer.h",
    "include/mpu_prototypes.h",
    "include/mpu_wrappers.h",
    "include/portable.h",
    "include/projdefs.h",
    "include/queue.h",
    "include/semphr.h",
    "include/stack_macros.h",
    "include/stream_buffer.h",
    "include/task.h",
    "include/timers.h",
    # Copied by genrule to allow these other headers to bare-include it, without polluting the search path for dependents
    "include/portmacro.h",
]

cc_library(
    name = "FreeRTOS-Kernel",
    srcs = [
        "croutine.c",
        "event_groups.c",
        "list.c",
        "queue.c",
        "stream_buffer.c",
        "tasks.c",
        "timers.c",
        # TODO: make heap impl configurable
        # heap_1 does not permit deletion
        # heap_2 permits deletion but does not coalesce
        # heap_3 wraps malloc/free (avoid)
        # heap_4 coalesces
        # This is included in srcs and not a separate cc_library because OF COURSE there would be a dependency cycle.
        "portable/MemMang/heap_4.c",
    ],
    hdrs = KERNEL_HDRS,
    implementation_deps = [
        ":FreeRTOS-Kernel-headers-bareinclude",
    ],
    include_prefix = "FreeRTOS",
    strip_include_prefix = "include",
    deps = [
        "@FreeRTOS//config:FreeRTOSConfig",
        # Provide portmacro as a prefixed include to dependents
    ] + select({
        "@FreeRTOS//config/ports:" + name: ["@FreeRTOS//ports/" + name + ":portmacro"]
        for name in PORT_NAMES
    }),
)

cc_library(
    name = "FreeRTOS-Kernel-headers-bareinclude",
    hdrs = KERNEL_HDRS,
    strip_include_prefix = "include",
)

# FreeRTOS-Kernel code wants to include "portmacro.h" without a prefix.
# This accomplishes that without polluting the search path upstream.
genrule(
    name = "copy_portmacro_for_bareinclude",
    srcs = select({
        "@FreeRTOS//config/ports:GCC_RP2040": ["portable/ThirdParty/GCC/RP2040/include/portmacro.h"],
        "@FreeRTOS//config/ports:GCC_POSIX": ["portable/ThirdParty/GCC/Posix/portmacro.h"],
    }),
    outs = [
        "include/portmacro.h",
    ],
    cmd_bash = "cp $< $@",
)

# For the port implementations
exports_files(glob(["portable/**"]))
